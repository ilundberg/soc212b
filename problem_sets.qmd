---
title: "Problem Sets"
---

This page will contain a problem set corresponding to each class meeting. The problem sets are very open-ended and are designed to connect the material from class to your ongoing project.

For every problem set, submit a PDF. If your code is not embedded in your PDF, then also submit a code file.

We chose together the following weekly pattern for problem sets:

* Wednesday lecture
* Problem set due the following Monday at 9pm
* Peer review due Wednesday at 9am

We will be using identified peer reviews. The reason these are not anonymous is that we are a small class, and we will get to know one another's projects. Your peer reviewer will not be grading you or assigning point values, but they will be commenting on your work. A good peer review is a short paragraph that comments on promising aspects of your peer's work as well as offering suggestions for improvement or future directions.

## Problem Set 1

#### 1. Your ongoing paper.

1.1. (15 points) Write an abstract of your research paper.

1.2. (5 points) What is one unit-specific quantity in your paper?

1.3. (5 points) What is one target population in your paper?

#### 2. Regression for a conditional mean

(25 points)

In class, we used OLS regression to predict the mean outcome in a subgroup. Do the same thing in a dataset of your choosing, which might be the dataset from your project. Define the outcome variable and the population subgroup you are describing.

## Problem Set 2

1. (20 points) In your project, do you have something analogous to many groups with a few observations per group? This could more generally be any case where the number of parameters to be estimated is somewhat large for the sample size available. If not in your project, think of an example in your general research area. Write a few sentences about why one might want penalized regression in that setting.

The remainder of this problem set is based in the idea of multilevel models, though you can alternatively estimate by LASSO or ridge regression if you prefer. You can complete parts (2) and (3) in your own dataset if you can define at least 10 groups with at least 20 units per group. Wherever we say “team”, substitute whatever group is in your dataset. You may also use the [baseball_population.csv](data/baseball_population.csv) data, in which the group variable is `team`.

2. (15 points) Draw a sample of 5 units per group. Estimate an unpenalized OLS regression and a penalized regression (multilevel, ridge, or LASSO). Produce a graph that compares the predicted values.

3. (15 points) Repeat the exercise above but with a sample of 20 units per group. Visualize the estimates. How do your results change?

Note that on (3) it is likely that the estimates will look different from (2), but it is also possible that they will be similar depending on your setting. For example, if your algorithm sets a very large penalty in your setting then all the group-specific deviations could be shrunk to zero in both (2) and (3). There are many right answers.

# Problem Set 3

Using the simulation data from class or data from your own project:

1. (15 points) Estimate a regression tree and visualize it. If you are using R, there are packages to visualize the tree. If you are using Stata, there may be packages or you are welcome to use the summary text output.

2. (10 points) Write 3-4 sentences for someone who has never heard of this method. Pick some predictor vector value and explain how the tree produces a prediction for that predictor vector.

3. (15 points) Estimate a random forest. Visualize the predicted values as a function of the predictors. If your data have only two predictors, this could be as in class with one on the $x$-axis and one for colors. If you have many predictors, you may need to find a creative way to visualize your predictions. You may choose to make predictions while holding one or more variables at a single value.

4. (10 points) In a few sentences, give an example of a problem in your area of research (possibly your paper) where the functional form linking $\vec{X}$ to $E(Y\mid\vec{X})$ is unknown, such that a random forest might be a way to learn the functional form from the data.






